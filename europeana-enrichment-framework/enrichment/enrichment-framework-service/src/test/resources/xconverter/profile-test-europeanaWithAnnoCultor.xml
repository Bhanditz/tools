<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rdf:RDF [
    <!ENTITY rdf 'http://www.w3.org/1999/02/22-rdf-syntax-ns#'>
    <!ENTITY rdfs 'http://www.w3.org/2000/01/rdf-schema#'>
    <!ENTITY ac 'http://annocultor.eu/converter/'>
    ]>
    <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" 
    	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:inm="http://www.inmagic.com/webpublisher/query"
    	xsi:schemaLocation="http://annocultor.sourceforge.net/XmlApi/ ../../../../target/apidocs/XConverter.xsd"
    	xmlns:ac="&ac;"
    	>
    	<ac:Profile rdf:about="europeanaWithAnnocultor" ac:institution="KB" ac:publisherId="000" ac:versionAnnoCultor="2.0">
    		<ac:parameters rdf:parseType="Collection">
    			<ac:Parameter>
    				<ac:name>ANNOCULTOR_VOCABULARY_DIR</ac:name>
    				<ac:value>demos/collections/bibliopolis/voc</ac:value>
    			</ac:Parameter>
    			<ac:Parameter>
    				<ac:name>ANNOCULTOR_INPUT_DIR</ac:name>
    				<ac:value>demos/collections/bibliopolis/xml</ac:value>
    			</ac:Parameter>
    			<ac:Parameter>
    				<ac:name>ANNOCULTOR_OUTPUT_DIR</ac:name>
    				<ac:value>demos/collections/bibliopolis/rdf</ac:value>
    			</ac:Parameter>
    		</ac:parameters>
    		<ac:vocabularies rdf:parseType="Collection">
    			<ac:VocabularyOfTerms rdf:about="terms">
    				<ac:comment>AAT</ac:comment>
    				<ac:file>aatned.rdf</ac:file>
    				<ac:sparqlQuery>SELECT ?code ?label WHERE {?code &lt;http://e-culture.multimedian.nl/ns/getty/vp#labelPreferred&gt; ?label}</ac:sparqlQuery>
    			</ac:VocabularyOfTerms>
    		</ac:vocabularies>
    		<ac:repositories rdf:parseType="Collection">
    			<ac:Repository rdf:about="beeldbank">
    				<ac:datasources rdf:parseType="Collection">
    					<ac:XmlDataSource>
    						<ac:file>beeldbank.xml</ac:file>
    					</ac:XmlDataSource>
    				</ac:datasources>
    				<ac:destinations rdf:parseType="Collection">
    					<ac:RdfGraph rdf:about="Works">
    					   <ac:comment>Works</ac:comment>
    					</ac:RdfGraph>
    					<ac:RdfGraph rdf:about="Terms">
    					   <ac:comment>Terms</ac:comment>
    					</ac:RdfGraph>
    					<ac:RdfGraph rdf:about="Links">
    					   <ac:comment>Links</ac:comment>
    					</ac:RdfGraph>
    				</ac:destinations>	
    				<ac:objectRules rdf:parseType="Collection">		
    					<ac:ObjectRule>
    						<ac:recordSeparator>/inm:Results/inm:Recordset/inm:Record</ac:recordSeparator>
    						<ac:recordNamespace>inm</ac:recordNamespace>
    						<ac:recordIdentifier>/inm:Results/inm:Recordset/inm:Record/inm:NUMMER</ac:recordIdentifier>
    						<ac:recordInformalIdentifier>/inm:Results/inm:Recordset/inm:Record/inm:TITEL</ac:recordInformalIdentifier>
    						<ac:listeners rdf:parseType="Collection">
    							<ac:OnPreCondition>
    								<ac:java>
    									//System.out.println("PRECOND: " + sourceDataObject.toString());
    									return true;
    								</ac:java>
    							</ac:OnPreCondition>
    						</ac:listeners>
    						<ac:propertyRules>
    							<ac:eu.annocultor.rules.RenameLiteralPropertyRule-rename>
    								<ac:srcPath rdf:datatype="ac:Path">inm:TITEL</ac:srcPath>
    								<ac:dstProperty rdf:datatype="ac:Property">dc:TITLE</ac:dstProperty>
    								<ac:dstGraph rdf:datatype="ac:Graph">Works</ac:dstGraph>
    								<ac:listeners rdf:parseType="Collection">
    									<ac:OnInvocation>
    										<ac:java>
    											console.println("title rule invoked on title: " + sourceTriple.getValue());
    											return sourceTriple;
    										</ac:java>
    									</ac:OnInvocation>
    								</ac:listeners>					
    							</ac:eu.annocultor.rules.RenameLiteralPropertyRule-rename>
    							<ac:eu.annocultor.tagger.rules.LookupTermRule-withLocalTerms>
    								<ac:srcPath rdf:datatype="ac:Path">inm:TWOND</ac:srcPath>
    								<ac:dstProperty rdf:datatype="ac:Property">dc:subject</ac:dstProperty>
     	                                <ac:dstGraphLiterals rdf:datatype="ac:Graph">Terms</ac:dstGraphLiterals>
                                <ac:dstGraphLinks rdf:datatype="ac:Graph">Terms</ac:dstGraphLinks>
     			   				<ac:termsProperty rdf:datatype="ac:Property">dc:subject</ac:termsProperty>
 										<ac:termsSignature rdf:datatype="ac:String">subject</ac:termsSignature>
    								<ac:termsGraph rdf:datatype="ac:Graph">Links</ac:termsGraph>
    								<ac:termsNamespace rdf:datatype="ac:Namespace">inm</ac:termsNamespace>
    								<ac:termsLang rdf:datatype="ac:Lang">fr</ac:termsLang>
    								<ac:termsSplitPattern rdf:datatype="ac:String">( *; *)|( *, *)</ac:termsSplitPattern>
    								<ac:termsVocabulary rdf:datatype="ac:VocabularyOfTerms">terms</ac:termsVocabulary>
    								<ac:listeners rdf:parseType="Collection">
    									<ac:OnInvocation>
    										<ac:java>
    										  console.println("++++" + sourceTriple.getValue());
    											return sourceTriple;
    										</ac:java>
    									</ac:OnInvocation>
    								</ac:listeners>
    							</ac:eu.annocultor.tagger.rules.LookupTermRule-withLocalTerms>				
    						</ac:propertyRules>
    					</ac:ObjectRule>
    				</ac:objectRules>
    				<ac:listeners rdf:parseType="Collection">
    					<ac:OnConversionStarts>
    						<ac:java>
    							// test code
    							console.println(environment.getAnnoCultorHome());						
    						</ac:java>
    					</ac:OnConversionStarts>
    				</ac:listeners>
    				<ac:maxRecordsToConvert>10</ac:maxRecordsToConvert>
    			</ac:Repository>
    		</ac:repositories>
    	</ac:Profile>
    </rdf:RDF>